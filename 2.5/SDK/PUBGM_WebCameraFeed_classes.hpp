#pragma once

// PUBG MOBILE 2.5.0 SDK generated by Huy#3877 

namespace SDK
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// Class WebCameraFeed.WebCameraComponent
// 0x0020 (0x0280 - 0x0260)
class UWebCameraComponent : public USceneComponent
{
public:
	struct FWebCameraDeviceId                          DeviceID;                                                 // 0x0260(0x0004) (Edit, Config)
	int                                                requestedWidth;                                           // 0x0264(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                requestedHeight;                                          // 0x0268(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               MirroredVideo;                                            // 0x026C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x13];                                      // 0x026D(0x0013) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class WebCameraFeed.WebCameraComponent");
		return pStaticClass;
	}


	bool SwitchFrontAndBackCamera();
	void SetDeviceId(int ID);
	bool SaveAsImage(const struct FString& Filename);
	static TArray<struct FString> ListDevices();
	class UTexture* GetTexture();
	int GetFrontCameraId();
	int GetBackCameraId();
};


// Class WebCameraFeed.WebCameraWidget
// 0x00E8 (0x01B8 - 0x00D0)
class UWebCameraWidget : public UWidget
{
public:
	struct FWebCameraDeviceId                          DeviceID;                                                 // 0x00D0(0x0004) (Edit, Config)
	int                                                requestedWidth;                                           // 0x00D4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                requestedHeight;                                          // 0x00D8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               MirroredVideo;                                            // 0x00DC(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               ScanningQRCode;                                           // 0x00DD(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00DE(0x0002) MISSED OFFSET
	struct FLinearColor                                ColorAndOpacity;                                          // 0x00E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                  // 0x00F0(0x000C) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00F0(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	struct FScriptDelegate                             OnScanningSuccess;                                        // 0x0100(0x000C) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0100(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData03[0xA8];                                      // 0x0110(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class WebCameraFeed.WebCameraWidget");
		return pStaticClass;
	}


	bool SwitchFrontAndBackCamera();
	void SetDeviceId(int ID);
	void SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity);
	bool SaveAsImage(const struct FString& Filename);
	int GetFrontCameraId();
	int GetBackCameraId();
};


}

