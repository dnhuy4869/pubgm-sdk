#pragma once

// PUBG MOBILE 2.7.0 SDK generated by Huy#3877 

namespace SDK
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// Class HiggsBoson.BaziState
// 0x0048 (0x0350 - 0x0308)
class ABaziState : public AActor
{
public:
	TArray<struct FBazi>                               Bazi;                                                     // 0x0308(0x000C) (Net, ZeroConstructor)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0314(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.BaziState");
		return pStaticClass;
	}


	void RemoveBazi(int Adam);
	void OnRep_Bazi();
	void AddBazi(const struct FBazi& Element);
};


// Class HiggsBoson.ClientGlueHiaSystem
// 0x08D0 (0x08F0 - 0x0020)
class UClientGlueHiaSystem : public UWorldSubsystem
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0020(0x0004) MISSED OFFSET
	class UTimeIntervalPawnStateHistorySystem*         TimeIntervalPawnStateHistorySystem;                       // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnglish;                                                 // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8C7];                                     // 0x0029(0x08C7) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.ClientGlueHiaSystem");
		return pStaticClass;
	}


	void Func9(class AActor* PtrWeapon);
	void Func8(class AActor* PtrWeapon, const struct FBulletHitInfoUploadData& UploadData, const struct FLocalShootHitData& LocalHitData);
	bool Func7();
	float Func6(class AActor* Param1);
	float Func3();
	bool Func2(class AActor* CharacterPtr, bool bParam1);
	void Func15(class AActor* Param1);
	void Func14(const struct FShootTimeData& InData);
	float Func11(class AActor* Param1);
	void Func10(class AActor* Param1);
	bool Func1(class AActor* CharacterPtr, float TimeInSeconds, float MarginInSeconds);
};


// Class HiggsBoson.FuzzyObject
// 0x0264 (0x0280 - 0x001C)
class UFuzzyObject : public UObject
{
public:
	unsigned char                                      UnknownData00[0x258];                                     // 0x001C(0x0258) MISSED OFFSET
	int                                                Param1;                                                   // 0x0274(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0278(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.FuzzyObject");
		return pStaticClass;
	}


	bool SetUInt8ValueByName(const struct FString& Name, unsigned char Value);
	bool SetUInt64ValueByName(const struct FString& Name, uint64_t Value);
	bool SetUInt32ValueByName(const struct FString& Name, uint32_t Value);
	bool SetUInt16ValueByName(const struct FString& Name, uint16_t Value);
	bool SetInt8ValueByName(const struct FString& Name, int8_t Value);
	bool SetInt64ValueByName(const struct FString& Name, int64_t Value);
	bool SetInt32ValueByName(const struct FString& Name, int Value);
	bool SetInt16ValueByName(const struct FString& Name, int16_t Value);
	bool SetFloatValueByName(const struct FString& Name, float Value);
	bool SetBoolValueByName(const struct FString& Name, bool Value);
	bool GetUInt8ValueByName(const struct FString& Name, unsigned char* OutValue);
	bool GetUInt64ValueByName(const struct FString& Name, uint64_t* OutValue);
	bool GetUInt32ValueByName(const struct FString& Name, uint32_t* OutValue);
	bool GetUInt16ValueByName(const struct FString& Name, uint16_t* OutValue);
	bool GetInt8ValueByName(const struct FString& Name, int8_t* OutValue);
	bool GetInt64ValueByName(const struct FString& Name, int64_t* OutValue);
	bool GetInt32ValueByName(const struct FString& Name, int* OutValue);
	bool GetInt16ValueByName(const struct FString& Name, int16_t* OutValue);
	bool GetFloatValueByName(const struct FString& Name, float* OutValue);
	bool GetBoolValueByName(const struct FString& Name, bool* OutValue);
};


// Class HiggsBoson.SCoronaClientData
// 0x0000 (0x0280 - 0x0280)
class USCoronaClientData : public UFuzzyObject
{
public:

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.SCoronaClientData");
		return pStaticClass;
	}

};


// Class HiggsBoson.CamoyoHelper
// 0x0004 (0x0020 - 0x001C)
class UCamoyoHelper : public UObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.CamoyoHelper");
		return pStaticClass;
	}


	static void MakeRectTu(const struct FScriptDelegate& CamoyoRetDelegate, const struct FString& Filename, int Quality, bool bShowUI);
	static void MakeMemPerform(int InbOpen);
	static void MakeFitRectTu(const struct FScriptDelegate& CamoyoRetDelegate, const struct FVector4& InCutParam, int InTuType, bool isShowUI);
};


// Class HiggsBoson.HiggsBosonComponent
// 0x0968 (0x0AB8 - 0x0150)
class UHiggsBosonComponent : public ULuaActorComponent
{
public:
	unsigned char                                      UnknownData00[0x1F];                                      // 0x0150(0x001F) MISSED OFFSET
	bool                                               bOpenActorChannelErrorReport;                             // 0x016F(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF4];                                      // 0x0170(0x00F4) MISSED OFFSET
	struct FString                                     TraceData;                                                // 0x0264(0x000C) (ZeroConstructor)
	struct FString                                     GameTraceData;                                            // 0x0270(0x000C) (ZeroConstructor)
	uint32_t                                           HeartBreaks;                                              // 0x027C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     HeartInfo;                                                // 0x0280(0x000C) (ZeroConstructor)
	struct FScriptMulticastDelegate                    OnSwiftHawkDelegate;                                      // 0x028C(0x000C) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGlueHiaRayResult;                                       // 0x0298(0x000C) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ASTExtraBaseCharacter*                       CharacterOwner;                                           // 0x02A4(0x0004) (ZeroConstructor, IsPlainOldData)
	class ASTExtraPlayerController*                    PlayerController;                                         // 0x02A8(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bClientInfoReceived;                                      // 0x02AC(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02AD(0x0003) MISSED OFFSET
	TArray<uint32_t>                                   ClientInfoAsUInt32Array;                                  // 0x02B0(0x000C) (ZeroConstructor)
	TArray<unsigned char>                              IntegrityItemCheckResultAsBytes;                          // 0x02BC(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x38];                                      // 0x02C8(0x0038) MISSED OFFSET
	bool                                               bRoofTouchActive;                                         // 0x0300(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xB];                                       // 0x0301(0x000B) MISSED OFFSET
	int                                                RoofTouchStatus;                                          // 0x030C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x64C];                                     // 0x0310(0x064C) MISSED OFFSET
	class USCoronaClientData*                          SecurityCoronaLabClientDataPointer;                       // 0x095C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x54];                                      // 0x0960(0x0054) MISSED OFFSET
	bool                                               bMHActive;                                                // 0x09B4(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x47];                                      // 0x09B5(0x0047) MISSED OFFSET
	TMap<int, int>                                     FFItemIDMap;                                              // 0x09FC(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData08[0x70];                                      // 0x0A38(0x0070) MISSED OFFSET
	float                                              TouchScreenActiveTimeRatioThreshold;                      // 0x0AA8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0AAC(0x0004) MISSED OFFSET
	float                                              MouTa;                                                    // 0x0AB0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0AB4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.HiggsBosonComponent");
		return pStaticClass;
	}


	void Zanwu(const struct FString& Param1);
	void SyncServerParam(bool Param1);
	void SwiftHawk(TArray<unsigned char> Hawks, uint32_t Magic);
	void ShowABCD(const struct FString& Message, bool bIsClientShowWindow, bool bIsServerReportRobot, bool bIsSimilarMessageReportOnlyOnce);
	void SetSchemeForInitialize(int Index, uint32_t VerifyLen, TArray<unsigned char> VerifyHashArray, TArray<struct FPatchPoint> PatchPointArray);
	void SetSchemeForGet(int Index, uint32_t VerifyLen, TArray<unsigned char> VerifyHashArray, TArray<struct FPatchPoint> PatchPointArray);
	void ServerWheat(float Param1, float Param2);
	void ServerPoPo(TArray<unsigned char>* Array);
	void RPC_ServerGlueHiaPark(int8_t HeShui, TArray<unsigned char> GlueHiaParkArr, uint32_t HiaStatus, TArray<unsigned char> GlueArg, TArray<unsigned char> GlueHiaParkArr2, uint32_t HiaStatus2);
	void RPC_ServerCapbo(int8_t BoCapC, int8_t InBoType, TArray<unsigned char> BoDataArr);
	void RPC_ClientCoronaLab(unsigned char bAllSwitch, TArray<unsigned char> CoronaLab, uint32_t CoronaState);
	void OnWeaponAimInput(float InDistToEnemy, float InYaw, float InPitch, float InRoll);
	void OnTouchInput(float InYaw, float InPitch, float InRoll);
	void OnStopFireEvent();
	void OnStartFireEvent();
	void OnSkillInteruptVisual(class AActor* InTarget, class AActor* InCauser);
	void OnSkillEndVisual(class AActor* InTarget, class AActor* InCauser);
	void OnSkillEndTrans(class AActor* InTarget, class AActor* InCauser);
	void OnSkillBeginVisual(class AActor* InTarget, class AActor* InCauser);
	void OnSkillBeginTrans(class AActor* InTarget, class AActor* InCauser);
	void OnPlayerScopeOut(bool bBegan);
	void OnPlayerScopeIn(bool bBegan);
	void OnMyPawnRespawn(class AUAEPlayerController* InPlayerController);
	void OnKillSomeOneEvent(class AActor* InSomeOne);
	void OnGyroInput(float InYaw, float InPitch, float InRoll);
	void OnClientAdjustPosition(const struct FVector& NewLoc, ECharacterMoveDragReason Reason);
	void OnCapboReturn(int BoCapC, int InBoType, TArray<unsigned char> RetData);
	void OnBulletImpactEvent(class AActor* InCauser, const struct FHitResult& InImpactResult);
	void HandleClientReconnect();
	float GetServerGuey();
	void FlushGameEnd();
	void Ezio(int Param1, int Param2, int param3);
	int EnableTickEncrypt();
	void EnableEnhancedDynamicActors(int Index);
	void DispatchIntegrityCheckItem(uint32_t PlatID, uint32_t AreaID, uint32_t GameBits, uint32_t Index, int Offset, uint32_t Len, uint32_t Type);
	void DevPVSCheckClientLocationC2S(class ASTExtraBaseCharacter* PtrOtherCharacter, const struct FVector& D, const struct FVector& A, const struct FVector& V, const struct FVector& C, bool b1);
	void DevPVSCheckClientLocation(class AActor* PtrSimulatedProxy, const struct FVector& D);
	void ControlRoofTouch(int Switch);
	void ControlMHActive(int Switch);
	void ClientSwiftHawkWithParams(TArray<unsigned char> Hawks);
	void ClientSwiftHawk(unsigned char Type, int SequenceID);
	void ClientReceiveEx(TArray<unsigned char> RPCConstArray);
	void ClientDoJT(bool bDelayUntilShot);
};


// Class HiggsBoson.SecurityAvatarSystem
// 0x0040 (0x0060 - 0x0020)
class USecurityAvatarSystem : public UWorldSubsystem
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0020(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.SecurityAvatarSystem");
		return pStaticClass;
	}


	void OnAvatarEquipped(class AUAECharacter* CharacterOwner, int SlotID, const struct FItemDefineID& NewItemID, const struct FItemDefineID& OldItemID);
};


// Class HiggsBoson.SecurityImprisonComp
// 0x0020 (0x00E0 - 0x00C0)
class USecurityImprisonComp : public UActorComponent
{
public:
	class ASTExtraBaseCharacter*                       CharacterWaitForOp;                                       // 0x00C0(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<uint64_t>                                   TeammateKillerUID;                                        // 0x00C4(0x000C) (Net, ZeroConstructor)
	TArray<unsigned char>                              TeammateKillType;                                         // 0x00D0(0x000C) (Net, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.SecurityImprisonComp");
		return pStaticClass;
	}


	void ReleaseTeammate(uint64_t PlayerUID);
	void ImprisonmentUIUpdate(uint64_t PlayerUID, bool bIsImprison);
	void ImprisonmentTeammate(uint64_t PlayerUID, bool bIscomplaint);
	void ImprisonmentReport(uint64_t PlayerUID);
};


// Class HiggsBoson.TickAsTimer
// 0x0004 (0x0020 - 0x001C)
class UTickAsTimer : public UObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.TickAsTimer");
		return pStaticClass;
	}

};


// Class HiggsBoson.TimeConsuming
// 0x0004 (0x0020 - 0x001C)
class UTimeConsuming : public UObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.TimeConsuming");
		return pStaticClass;
	}

};


// Class HiggsBoson.TimeIntervalPawnStateHistorySystem
// 0x009C (0x00B8 - 0x001C)
class UTimeIntervalPawnStateHistorySystem : public UObject
{
public:
	unsigned char                                      UnknownData00[0x3C];                                      // 0x001C(0x003C) MISSED OFFSET
	int                                                HistoryArraySize;                                         // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5C];                                      // 0x005C(0x005C) MISSED OFFSET

	static UClass* StaticClass()
	{
        static UClass *pStaticClass = 0;
        if (!pStaticClass)
            pStaticClass = UObject::FindClass("Class HiggsBoson.TimeIntervalPawnStateHistorySystem");
		return pStaticClass;
	}


	void UpdateParams();
	bool QueryHistoryMaxVelocity(uint64_t UID, float CenterTime, float MarginTime, float* OutMaxZVelocity, float* OutMaxXYVelocity);
};


}

